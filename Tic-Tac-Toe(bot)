#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <math.h>
#include <windows.h>
#include <stdlib.h>
#include <time.h>
int winningMove(char array[3][3],char p2){
for(int i = 0;i < 3;i++){
        if(array[0][i] == p2 && array[1][i] == p2 && array[2][i] == '.'){
    array[2][i] = p2;
    return 1;
}else if(array[i][0] == p2 && array[i][1] == p2 && array[i][2] == '.'){
    array[i][2] = p2;
    return 1;
}
else if(array[0][0] == p2 && array[1][1] == p2 && array[2][2] == '.'){
    array[2][2] = p2;
    return 1;
}else if(array[0][2] == p2 && array[1][1] == p2 && array[2][0] == '.'){
    array[2][0] = p2;
    return 1;
}else if(array[0][0] == p2 && array[2][2] == p2 && array[1][1] == '.'){
    array[1][1] = p2;
    return 1;
}else if(array[0][2] == p2 && array[2][0] == p2 && array[1][1] == '.'){
    array[1][1] = p2;
    return 1;
}else if(array[1][1] == p2 && array[2][2] == p2 && array[0][0] == '.'){
    array[0][0] = p2;
    return 1;
}else if(array[1][1] == p2 && array[2][0] == p2 && array[0][2] == '.'){
    array[0][2] = p2;
    return 1;
};



};
}
int checkMove(char array[3][3],char p1, char p2, int turnCount){
if(turnCount == 0){
    if(array[1][1] == '.'){
        array[1][1] = p2;
        turnCount++;
        return 1;
        
    }else{
for(int i = 0; i < 4; i++){
int corner[4][2] = {{0,0},{2,2},{0,2},{2,0}};
if(array[corner[i][0]][corner[1][i]] == '.'){
    
    array[corner[i][0]][corner[1][i]] = p2;
    turnCount++;
    return 1;
    
}else{
    for(int i = 0;i < 3;i++){
  if(array[0][i] == p1 && array[1][i] == p1 && array[2][i] == '.'){
            array[2][i] = p2;
            return 1;
        }
        if(array[2][i] == p1 && array[1][i] == p1 && array[0][i] =='.'){    
             array[0][i] = p2;
             return 1;
        }
        if(array[0][i] == p1 && array[2][i] == p1 && array[1][i] =='.'){
     array[1][i] = p2;
            return 1;
        }
        
    if(array[i][0] == p1 && array[i][1] == p1 && array[i][2] == '.'){
        array[i][2] = p2;
         return 1;
    } 
     if(array[i][0] == p1 && array[i][2] == p1 && array[i][1] == '.'){
        array[i][1] = p2;
         return 1;
    } if(array[i][2] == p1 && array[i][1] == p1 && array[i][0] == '.'){
        array[i][0] = p2;
         return 1;
    }
    if(array[0][0] == p1 && array[1][1] == p1 && array[2][2] == '.'){
        array[2][2] = p2;
       return 1;
    }
      if(array[0][0] == p1 && array[2][2] == p1 && array[2][2] == '.'){
        array[1][1] = p2;
         return 1;
    }
      if(array[1][1] == p1 && array[2][2] == p1 && array[0][0] == '.'){
        array[0][0] = p2;
         return 1;
    }
    if(array[0][2] == p1 && array[1][1] == p1 && array[2][0] == '.'){
        array[2][0] = p2;
       return 1;
    }
        if(array[0][i] == p1 && array[2][i] == p1 && array[1][i] == '.'){
            array[1][i] = p2;
            return 1;
        }
    if(array[i][0] == p1 && array[i][2] == p1 && array[i][1] == '.'){
        array[i][1] = p2;
         return 1;
    } 
    if(array[0][0] == p1 && array[2][2] == p1 && array[1][1] == '.'){
        array[1][1] = p2;
         return 1;}

    if(array[0][2] == p1 && array[2][0] == p1 && array[1][1] == '.'){
        array[1][1] = p2;
        return 1;
    } if(array[0][2] == p1 && array[0][0] == p1 && array[1][1] == '.'){
        array[1][1] = p2;
        return 1;
    } if(winningMove(array,p2) == 1){
    return 1;
 };
    
    int x,y;
    do{x = (rand() % 3);
    y = (rand() % 3);
    array[x][y];
    }while(array[x][y] != '.');
    array[x][y] = p2;
    return 0;
    }
    

}

}



    }



}

}

int checkComplete(char array[3][3]){
for(int i=0;i < 3;i++){
for(int j = 0;j < 3;j++){
    if(array[i][j] == '.'){
        
        return 0;
    }
}
}
return 1;
}
int winnerCheck(char array[3][3],char p1,char p2){
for(int i = 0;i < 3;i++){
if(array[0][i] == p1 && array[1][i] == p1 && array[2][i] == p1){
    printf("Player 1 has won");
    return 1;
}else if(array[0][i] == p2 && array[1][i] == p2 && array[2][i] == p2){
    printf("Player 2 has won");
    return 1;
}else if(array[i][0] == p1 && array[i][1] == p1 && array[i][2] == p1){
    printf("Player 1 has won");
    return 1;
}else if(array[i][0] == p2 && array[i][1] == p2 && array[i][2] == p2){
    printf("Player 2 has won");
    return 1;
}else if(array[0][0] == p2 && array[1][1] == p2 && array[2][2] == p2){
    printf("Player 2 has won");
    return 1;
}else if(array[0][0] == p1 && array[1][1] == p1 && array[2][2] == p1){
    printf("Player 1 has won");
    return 1;
}else if(array[0][2] == p2 && array[1][1] == p2 && array[2][0] == p2){
    printf("Player 2 has won");
    return 1;
}else if(array[0][2] == p1 && array[1][1] == p1 && array[2][0] == p1){
    printf("Player 1 has won");
    return 1;
}
return 0;

}
}



int main(){
int bot;
char array[3][3] = {0};
int r,c;
char p1;
int turnCount = 0;
char p2;
srand(time(NULL));
printf("\nINSTRUCTIONS\n");
printf("The game Tic-Tac-Toe has a few instructions\n");
printf("To select a particular position on the board you have to\n"); 
printf("choose the row and column of the particular column\n");
printf("ROW == . . .\n"); 
printf("COLUMN == .\n");
printf("          .\n");
printf("          .\n");

do{printf("Player 1 Choose a symbol (X,O): \n");
scanf(" %c", &p1);
switch(p1){

case 'X':printf("Player 1 has chosen X\n");
break;

case 'O':printf("Player 1 has chosen O\n");
break;
default:
printf("Invalid Input\n");
}
}while(p1 != 'X' && p1 != 'O');
printf("Player 2 has chosen %c\n\n",(p1 == 'X')? (p2 = 'O'):(p2 = 'X')   );
printf("\nGame Board\n");
for(int i=0;i < 3;i++){
for(int j = 0;j < 3;j++){
array[i][j] = '.';
printf(" %c", array[i][j]);

};
printf("\n");
};
do{
   do{
       do{printf("Player 1 pick a position to make your move\n");
            printf("Pick a postion in Row: \n");
            scanf("%d", &r);
            printf("Pick a postion in Column: \n");
            scanf("%d", &c);
            if(array[r][c] != '.'){
            printf("Please choose a valid position\n");
};
}while(checkComplete(array) == 1);
}while(array[r][c] != '.');
if(r > 2 || r < 0 || c > 2 || c < 0 ){
printf("Invalid Input");
}else{
array[r][c] = p1;
};

for(int i=0;i < 3;i++){
for(int j = 0;j < 3;j++){

printf(" %c", array[i][j]);

};

printf("\n");

};
if(winnerCheck(array,p1,p2)){

    break;
};

printf("Player 2 pick a position to make your move\n");
printf("Pick a postion in Row: \n");
printf("Pick a postion in Column: \n");

checkMove(array, p1,p2, turnCount);




for(int i=0;i < 3;i++){
for(int j = 0;j < 3;j++){

printf(" %c", array[i][j]);

};
printf("\n");
};
if(winnerCheck(array,p1,p2) == 1){
    break;
};
if(winnerCheck(array,p1,p2)){

    break;
};
}while(checkComplete(array) == 0);


}
